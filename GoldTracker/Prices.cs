// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using ConsoleApp1;
//
//    var prices = Prices.FromJson(jsonString);

namespace GoldTracker
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class Prices
    {
        [JsonProperty("id")]
        public long Id { get; set; }

        [JsonProperty("whitelisted")]
        public bool Whitelisted { get; set; }

        [JsonProperty("buys")]
        public Buys Buys { get; set; }

        [JsonProperty("sells")]
        public Buys Sells { get; set; }
    }

    public partial class Buys
    {
        [JsonProperty("quantity")]
        public long Quantity { get; set; }

        [JsonProperty("unit_price")]
        public long UnitPrice { get; set; }
    }

    public partial class Prices
    {
        public static Prices FromJson(string json) => JsonConvert.DeserializeObject<Prices>(json, GoldTracker.Converter1.Settings);
    }

    public static class Serialize1
    {
        public static string ToJson(this Prices self) => JsonConvert.SerializeObject(self, GoldTracker.Converter1.Settings);
    }

    internal static class Converter1
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}